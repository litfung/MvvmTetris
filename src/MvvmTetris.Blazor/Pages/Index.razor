@page "/"


@using MvvmTetris.Engine.Models
@using MvvmTetris.Engine.ViewModels
@using MvvmTetris.Blazor.Components


@functions
{
    public GameViewModel Game { get; } = new GameViewModel();


    protected override void OnInit()
        => this.Game.CommandManager.Execute(Command.Play);


    private void OnKeyDown(UIKeyboardEventArgs e)
    {
        var manager = this.Game.CommandManager;
        switch (e.Code)
        {
            case "KeyZ": manager.Execute(Command.RotateLeft); break;
            case "KeyX": manager.Execute(Command.RotateRight); break;
            case "ArrowUp": manager.Execute(Command.RotateRight); break;
            case "ArrowRight": manager.Execute(Command.MoveRight); break;
            case "ArrowDown": manager.Execute(Command.MoveDown); break;
            case "ArrowLeft": manager.Execute(Command.MoveLeft); break;
            case "Escape": manager.Execute(Command.Play); break;
            case "Space": manager.Execute(Command.ForceFix); break;
        }
    }
}


<div class="game" tabindex="0" onkeydown="@this.OnKeyDown">
    <div class="container">
        <div class="row">
            <div class="col-8">
                <FieldComponent Field="@this.Game.Field" />
            </div>
            <div class="col-4">
                <FieldComponent Field="@this.Game.NextField" />
                <ScoreComponent Score="@this.Game.Score" />
            </div>
        </div>
    </div>

    @if (this.Game.IsOver.Value)
    {
        <div class="game-over">Game is over !<br />Please press Esc key.</div>
    }
</div>